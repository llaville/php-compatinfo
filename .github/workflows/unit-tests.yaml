---
name: Unit Tests

on:
    pull_request:
        branches:
            - master
        paths-ignore:
            - 'docs/**'
    workflow_call:

jobs:
    lint_files:
        uses: llaville/.github/.github/workflows/mega-linter.yml@master
        with:
            repository: ${{ github.repository }}

    unit_tests:
        needs: lint_files

        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    -
                        os: ubuntu-latest
                        php: 7.4
                        extensions: json,pcre,pdo,phar,spl,mbstring,sqlite
                        tools: phpunit:9.6
                    -
                        os: ubuntu-latest
                        php: 8.0
                        extensions: json,pcre,pdo,phar,spl,mbstring,sqlite
                        tools: phpunit:9.6
                    -
                        os: ubuntu-latest
                        php: 8.1
                        extensions: json,pcre,pdo,phar,spl,mbstring,sqlite
                        tools: phpunit
                    -
                        os: ubuntu-latest
                        php: 8.2
                        extensions: json,pcre,pdo,phar,spl,mbstring,sqlite
                        tools: phpunit

        name: Compatibility Info

        env:
            APP_ENV: dev  # see explains at https://github.com/llaville/php-compatinfo-db/issues/101
            DATABASE_URL: "sqlite:///%kernel.cache_dir%/compatinfo-db.sqlite"

        steps:
            -   # Git Checkout
                name: Checkout
                uses: actions/checkout@v3

            -   # Setup PHP runtime
                name: Setup PHP runtime
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: ${{ matrix.extensions }}
                    tools: ${{ matrix.tools }}

            -   # Install Composer dependencies
                name: Install Composer dependencies
                uses: ramsey/composer-install@v2
                with:
                    dependency-versions: "highest"
                    composer-options: "--prefer-dist --no-scripts"

            -   # Build Database
                name: Build Database
                run: |
                    bin/phpcompatinfo db:create --ansi
                    bin/phpcompatinfo db:init --ansi

            -   # Run unit tests
                name: Unit tests with PHPUnit 9
                if: |
                    ${{ matrix.php == '7.4' }} ||
                    ${{ matrix.php == '8.0' }}
                run: phpunit --group features,large,reference,regression,default --testdox --do-not-cache-result --configuration ./phpunit-9.xml
            -
                name: Unit tests with PHPUnit 10
                if: |
                    ${{ matrix.php == '8.1' }} ||
                    ${{ matrix.php == '8.2' }}
                run: phpunit --group features,large,reference,regression,default --testdox --do-not-cache-result
